// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: trading/protobuf/data/entities/entities.proto

package entities

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines a component of the Bar type.
type Bar_Component int32

const (
	// The closing price.
	Bar_CLOSE Bar_Component = 0
	// The opening price.
	Bar_OPEN Bar_Component = 1
	// The highest price.
	Bar_HIGH Bar_Component = 2
	// The lowest price.
	Bar_LOW Bar_Component = 3
	// The median price, calculated as (low + hight)/2.
	Bar_MEDIAN Bar_Component = 4
	// The typical price, calculated as (low + hight + close)/3.
	Bar_TYPICAL Bar_Component = 5
	// The weighted price, calculated as (low + hight + open + close)/4.
	Bar_WEIGHTED Bar_Component = 6
	// The average price, calculated as (low + high + open + close)/4.
	Bar_AVERAGE Bar_Component = 7
	// The volume.
	Bar_VOLUME Bar_Component = 8
)

// Enum value maps for Bar_Component.
var (
	Bar_Component_name = map[int32]string{
		0: "CLOSE",
		1: "OPEN",
		2: "HIGH",
		3: "LOW",
		4: "MEDIAN",
		5: "TYPICAL",
		6: "WEIGHTED",
		7: "AVERAGE",
		8: "VOLUME",
	}
	Bar_Component_value = map[string]int32{
		"CLOSE":    0,
		"OPEN":     1,
		"HIGH":     2,
		"LOW":      3,
		"MEDIAN":   4,
		"TYPICAL":  5,
		"WEIGHTED": 6,
		"AVERAGE":  7,
		"VOLUME":   8,
	}
)

func (x Bar_Component) Enum() *Bar_Component {
	p := new(Bar_Component)
	*p = x
	return p
}

func (x Bar_Component) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bar_Component) Descriptor() protoreflect.EnumDescriptor {
	return file_trading_protobuf_data_entities_entities_proto_enumTypes[0].Descriptor()
}

func (Bar_Component) Type() protoreflect.EnumType {
	return &file_trading_protobuf_data_entities_entities_proto_enumTypes[0]
}

func (x Bar_Component) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Bar_Component.Descriptor instead.
func (Bar_Component) EnumDescriptor() ([]byte, []int) {
	return file_trading_protobuf_data_entities_entities_proto_rawDescGZIP(), []int{0, 0}
}

// Defines a component of the Quote type.
type Quote_Component int32

const (
	// The bid price.
	Quote_BID Quote_Component = 0
	// The ask price.
	Quote_ASK Quote_Component = 1
	// The med-price, calculated as (ask + bid) / 2.
	Quote_MID Quote_Component = 2
	// The weighted price, calculated as (ask*askSize + bid*bidSize) / (askSize + bidSize).
	Quote_WEIGHTED Quote_Component = 3
	// The weighted mid-price, calculated as (ask*bidSize + bid*askSize) / (askSize + bidSize).
	Quote_WEIGHTED_MID Quote_Component = 4
	// The spread in basis points (100 basis points = 1%), calculated as 10000 * (ask - bid) / mid.
	Quote_SPREAD_BP Quote_Component = 5
	// The bid size.
	Quote_BID_SIZE Quote_Component = 6
	// The ask size.
	Quote_ASK_SIZE Quote_Component = 7
	// The mid size, calculated as (ask_size + bid_size) / 2.
	Quote_MID_SIZE Quote_Component = 8
)

// Enum value maps for Quote_Component.
var (
	Quote_Component_name = map[int32]string{
		0: "BID",
		1: "ASK",
		2: "MID",
		3: "WEIGHTED",
		4: "WEIGHTED_MID",
		5: "SPREAD_BP",
		6: "BID_SIZE",
		7: "ASK_SIZE",
		8: "MID_SIZE",
	}
	Quote_Component_value = map[string]int32{
		"BID":          0,
		"ASK":          1,
		"MID":          2,
		"WEIGHTED":     3,
		"WEIGHTED_MID": 4,
		"SPREAD_BP":    5,
		"BID_SIZE":     6,
		"ASK_SIZE":     7,
		"MID_SIZE":     8,
	}
)

func (x Quote_Component) Enum() *Quote_Component {
	p := new(Quote_Component)
	*p = x
	return p
}

func (x Quote_Component) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Quote_Component) Descriptor() protoreflect.EnumDescriptor {
	return file_trading_protobuf_data_entities_entities_proto_enumTypes[1].Descriptor()
}

func (Quote_Component) Type() protoreflect.EnumType {
	return &file_trading_protobuf_data_entities_entities_proto_enumTypes[1]
}

func (x Quote_Component) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Quote_Component.Descriptor instead.
func (Quote_Component) EnumDescriptor() ([]byte, []int) {
	return file_trading_protobuf_data_entities_entities_proto_rawDescGZIP(), []int{1, 0}
}

// Defines a component of the Trade type.
type Trade_Component int32

const (
	// The price.
	Trade_PRICE Trade_Component = 0
	// The volume.
	Trade_VOLUME Trade_Component = 1
)

// Enum value maps for Trade_Component.
var (
	Trade_Component_name = map[int32]string{
		0: "PRICE",
		1: "VOLUME",
	}
	Trade_Component_value = map[string]int32{
		"PRICE":  0,
		"VOLUME": 1,
	}
)

func (x Trade_Component) Enum() *Trade_Component {
	p := new(Trade_Component)
	*p = x
	return p
}

func (x Trade_Component) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Trade_Component) Descriptor() protoreflect.EnumDescriptor {
	return file_trading_protobuf_data_entities_entities_proto_enumTypes[2].Descriptor()
}

func (Trade_Component) Type() protoreflect.EnumType {
	return &file_trading_protobuf_data_entities_entities_proto_enumTypes[2]
}

func (x Trade_Component) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Trade_Component.Descriptor instead.
func (Trade_Component) EnumDescriptor() ([]byte, []int) {
	return file_trading_protobuf_data_entities_entities_proto_rawDescGZIP(), []int{2, 0}
}

// Holds a time stamp, open, high, low and close prices and a volume.
type Bar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date and time stamp of the closing price.
	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// The opening price.
	Open float64 `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	// The highest price.
	High float64 `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	// The lowest price.
	Low float64 `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	// The closing price.
	Close float64 `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	// The aggregated volume.
	Volume float64 `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *Bar) Reset() {
	*x = Bar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bar) ProtoMessage() {}

func (x *Bar) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bar.ProtoReflect.Descriptor instead.
func (*Bar) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_data_entities_entities_proto_rawDescGZIP(), []int{0}
}

func (x *Bar) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Bar) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Bar) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Bar) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Bar) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Bar) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

// Holds a time stamp, bid and ask prices and sizes.
type Quote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date and time stamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// The bid price.
	Bid float64 `protobuf:"fixed64,2,opt,name=bid,proto3" json:"bid,omitempty"`
	// The ask price.
	Ask float64 `protobuf:"fixed64,3,opt,name=ask,proto3" json:"ask,omitempty"`
	// The bid size.
	BidSize float64 `protobuf:"fixed64,4,opt,name=bid_size,json=bidSize,proto3" json:"bid_size,omitempty"`
	// The ask size.
	AskSize float64 `protobuf:"fixed64,5,opt,name=ask_size,json=askSize,proto3" json:"ask_size,omitempty"`
}

func (x *Quote) Reset() {
	*x = Quote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_data_entities_entities_proto_rawDescGZIP(), []int{1}
}

func (x *Quote) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Quote) GetBid() float64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *Quote) GetAsk() float64 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *Quote) GetBidSize() float64 {
	if x != nil {
		return x.BidSize
	}
	return 0
}

func (x *Quote) GetAskSize() float64 {
	if x != nil {
		return x.AskSize
	}
	return 0
}

// Holds a time stamp, a price and a volume.
type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date and time stamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// The price.
	Price float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	// The volume.
	Volume float64 `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_data_entities_entities_proto_rawDescGZIP(), []int{2}
}

func (x *Trade) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

// Holds a time stamp and a scalar value.
type Scalar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The time stamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// The value.
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Scalar) Reset() {
	*x = Scalar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scalar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scalar) ProtoMessage() {}

func (x *Scalar) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scalar.ProtoReflect.Descriptor instead.
func (*Scalar) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_data_entities_entities_proto_rawDescGZIP(), []int{3}
}

func (x *Scalar) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Scalar) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Holds a temporal entity.
type TemporalEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entity:
	//	*TemporalEntity_Bar
	//	*TemporalEntity_Quote
	//	*TemporalEntity_Trade
	//	*TemporalEntity_Scalar
	Entity isTemporalEntity_Entity `protobuf_oneof:"entity"`
}

func (x *TemporalEntity) Reset() {
	*x = TemporalEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemporalEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemporalEntity) ProtoMessage() {}

func (x *TemporalEntity) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_data_entities_entities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemporalEntity.ProtoReflect.Descriptor instead.
func (*TemporalEntity) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_data_entities_entities_proto_rawDescGZIP(), []int{4}
}

func (m *TemporalEntity) GetEntity() isTemporalEntity_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *TemporalEntity) GetBar() *Bar {
	if x, ok := x.GetEntity().(*TemporalEntity_Bar); ok {
		return x.Bar
	}
	return nil
}

func (x *TemporalEntity) GetQuote() *Quote {
	if x, ok := x.GetEntity().(*TemporalEntity_Quote); ok {
		return x.Quote
	}
	return nil
}

func (x *TemporalEntity) GetTrade() *Trade {
	if x, ok := x.GetEntity().(*TemporalEntity_Trade); ok {
		return x.Trade
	}
	return nil
}

func (x *TemporalEntity) GetScalar() *Scalar {
	if x, ok := x.GetEntity().(*TemporalEntity_Scalar); ok {
		return x.Scalar
	}
	return nil
}

type isTemporalEntity_Entity interface {
	isTemporalEntity_Entity()
}

type TemporalEntity_Bar struct {
	Bar *Bar `protobuf:"bytes,1,opt,name=bar,proto3,oneof"`
}

type TemporalEntity_Quote struct {
	Quote *Quote `protobuf:"bytes,2,opt,name=quote,proto3,oneof"`
}

type TemporalEntity_Trade struct {
	Trade *Trade `protobuf:"bytes,3,opt,name=trade,proto3,oneof"`
}

type TemporalEntity_Scalar struct {
	Scalar *Scalar `protobuf:"bytes,4,opt,name=scalar,proto3,oneof"`
}

func (*TemporalEntity_Bar) isTemporalEntity_Entity() {}

func (*TemporalEntity_Quote) isTemporalEntity_Entity() {}

func (*TemporalEntity_Trade) isTemporalEntity_Entity() {}

func (*TemporalEntity_Scalar) isTemporalEntity_Entity() {}

var File_trading_protobuf_data_entities_entities_proto protoreflect.FileDescriptor

var file_trading_protobuf_data_entities_entities_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x22, 0x6d, 0x62, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x02, 0x0a, 0x03, 0x42, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x02,
	0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44,
	0x49, 0x41, 0x4e, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x59, 0x50, 0x49, 0x43, 0x41, 0x4c,
	0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x45, 0x44, 0x10, 0x06,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x56, 0x45, 0x52, 0x41, 0x47, 0x45, 0x10, 0x07, 0x12, 0x0a, 0x0a,
	0x06, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x08, 0x22, 0x92, 0x02, 0x0a, 0x05, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x64, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x69, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7f, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x4b, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x4d, 0x49, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x45,
	0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x45, 0x44, 0x5f,
	0x4d, 0x49, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x50, 0x52, 0x45, 0x41, 0x44, 0x5f,
	0x42, 0x50, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x49, 0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45,
	0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x07,
	0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x49, 0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x08, 0x22, 0x89,
	0x01, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x10, 0x01, 0x22, 0x4e, 0x0a, 0x06, 0x53, 0x63,
	0x61, 0x6c, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa3, 0x02, 0x0a, 0x0e, 0x54,
	0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a,
	0x03, 0x62, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x62, 0x67,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x42, 0x61, 0x72, 0x48, 0x00, 0x52, 0x03, 0x62, 0x61, 0x72, 0x12, 0x41, 0x0a, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x62, 0x67, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x41, 0x0a,
	0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d,
	0x62, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x44, 0x0a, 0x06, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6d, 0x62, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x42, 0x24, 0x5a, 0x22, 0x6d, 0x62, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trading_protobuf_data_entities_entities_proto_rawDescOnce sync.Once
	file_trading_protobuf_data_entities_entities_proto_rawDescData = file_trading_protobuf_data_entities_entities_proto_rawDesc
)

func file_trading_protobuf_data_entities_entities_proto_rawDescGZIP() []byte {
	file_trading_protobuf_data_entities_entities_proto_rawDescOnce.Do(func() {
		file_trading_protobuf_data_entities_entities_proto_rawDescData = protoimpl.X.CompressGZIP(file_trading_protobuf_data_entities_entities_proto_rawDescData)
	})
	return file_trading_protobuf_data_entities_entities_proto_rawDescData
}

var file_trading_protobuf_data_entities_entities_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_trading_protobuf_data_entities_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_trading_protobuf_data_entities_entities_proto_goTypes = []interface{}{
	(Bar_Component)(0),            // 0: mbg.trading.protobuf.data.entities.Bar.Component
	(Quote_Component)(0),          // 1: mbg.trading.protobuf.data.entities.Quote.Component
	(Trade_Component)(0),          // 2: mbg.trading.protobuf.data.entities.Trade.Component
	(*Bar)(nil),                   // 3: mbg.trading.protobuf.data.entities.Bar
	(*Quote)(nil),                 // 4: mbg.trading.protobuf.data.entities.Quote
	(*Trade)(nil),                 // 5: mbg.trading.protobuf.data.entities.Trade
	(*Scalar)(nil),                // 6: mbg.trading.protobuf.data.entities.Scalar
	(*TemporalEntity)(nil),        // 7: mbg.trading.protobuf.data.entities.TemporalEntity
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_trading_protobuf_data_entities_entities_proto_depIdxs = []int32{
	8, // 0: mbg.trading.protobuf.data.entities.Bar.time:type_name -> google.protobuf.Timestamp
	8, // 1: mbg.trading.protobuf.data.entities.Quote.time:type_name -> google.protobuf.Timestamp
	8, // 2: mbg.trading.protobuf.data.entities.Trade.time:type_name -> google.protobuf.Timestamp
	8, // 3: mbg.trading.protobuf.data.entities.Scalar.time:type_name -> google.protobuf.Timestamp
	3, // 4: mbg.trading.protobuf.data.entities.TemporalEntity.bar:type_name -> mbg.trading.protobuf.data.entities.Bar
	4, // 5: mbg.trading.protobuf.data.entities.TemporalEntity.quote:type_name -> mbg.trading.protobuf.data.entities.Quote
	5, // 6: mbg.trading.protobuf.data.entities.TemporalEntity.trade:type_name -> mbg.trading.protobuf.data.entities.Trade
	6, // 7: mbg.trading.protobuf.data.entities.TemporalEntity.scalar:type_name -> mbg.trading.protobuf.data.entities.Scalar
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_trading_protobuf_data_entities_entities_proto_init() }
func file_trading_protobuf_data_entities_entities_proto_init() {
	if File_trading_protobuf_data_entities_entities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trading_protobuf_data_entities_entities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trading_protobuf_data_entities_entities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trading_protobuf_data_entities_entities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trading_protobuf_data_entities_entities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scalar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trading_protobuf_data_entities_entities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemporalEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_trading_protobuf_data_entities_entities_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TemporalEntity_Bar)(nil),
		(*TemporalEntity_Quote)(nil),
		(*TemporalEntity_Trade)(nil),
		(*TemporalEntity_Scalar)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trading_protobuf_data_entities_entities_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trading_protobuf_data_entities_entities_proto_goTypes,
		DependencyIndexes: file_trading_protobuf_data_entities_entities_proto_depIdxs,
		EnumInfos:         file_trading_protobuf_data_entities_entities_proto_enumTypes,
		MessageInfos:      file_trading_protobuf_data_entities_entities_proto_msgTypes,
	}.Build()
	File_trading_protobuf_data_entities_entities_proto = out.File
	file_trading_protobuf_data_entities_entities_proto_rawDesc = nil
	file_trading_protobuf_data_entities_entities_proto_goTypes = nil
	file_trading_protobuf_data_entities_entities_proto_depIdxs = nil
}
