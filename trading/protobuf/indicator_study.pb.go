// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: trading/protobuf/indicator_study.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	entities "mbg/trading/protobuf/data/entities"
	indicators "mbg/trading/protobuf/indicators"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message to create indicator study.
type IndicatorStudyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Parameters to create indicators for the study.
	Params []*indicators.IndicatorParams `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
	// Input data for the study.
	Data []*entities.TemporalEntity `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *IndicatorStudyRequest) Reset() {
	*x = IndicatorStudyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_indicator_study_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorStudyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorStudyRequest) ProtoMessage() {}

func (x *IndicatorStudyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_indicator_study_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorStudyRequest.ProtoReflect.Descriptor instead.
func (*IndicatorStudyRequest) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_indicator_study_proto_rawDescGZIP(), []int{0}
}

func (x *IndicatorStudyRequest) GetParams() []*indicators.IndicatorParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *IndicatorStudyRequest) GetData() []*entities.TemporalEntity {
	if x != nil {
		return x.Data
	}
	return nil
}

// The reply message containing metadata of the created indicators.
type IndicatorStudyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An output metadata per individual indicator.
	Metadata []*indicators.IndicatorMetadata `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *IndicatorStudyReply) Reset() {
	*x = IndicatorStudyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_indicator_study_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorStudyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorStudyReply) ProtoMessage() {}

func (x *IndicatorStudyReply) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_indicator_study_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorStudyReply.ProtoReflect.Descriptor instead.
func (*IndicatorStudyReply) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_indicator_study_proto_rawDescGZIP(), []int{1}
}

func (x *IndicatorStudyReply) GetMetadata() []*indicators.IndicatorMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_trading_protobuf_indicator_study_proto protoreflect.FileDescriptor

var file_trading_protobuf_indicator_study_proto_rawDesc = []byte{
	0x0a, 0x26, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x62, 0x67, 0x2e, 0x74, 0x72,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x2d,
	0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x6d, 0x62, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x62, 0x67, 0x2e, 0x74,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x65, 0x0a, 0x13, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x62,
	0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x32, 0xdf, 0x01, 0x0a, 0x15, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x2b, 0x2e, 0x6d, 0x62, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d,
	0x62, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2b, 0x2e, 0x6d, 0x62, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x6d, 0x62, 0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x6d,
	0x62, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trading_protobuf_indicator_study_proto_rawDescOnce sync.Once
	file_trading_protobuf_indicator_study_proto_rawDescData = file_trading_protobuf_indicator_study_proto_rawDesc
)

func file_trading_protobuf_indicator_study_proto_rawDescGZIP() []byte {
	file_trading_protobuf_indicator_study_proto_rawDescOnce.Do(func() {
		file_trading_protobuf_indicator_study_proto_rawDescData = protoimpl.X.CompressGZIP(file_trading_protobuf_indicator_study_proto_rawDescData)
	})
	return file_trading_protobuf_indicator_study_proto_rawDescData
}

var file_trading_protobuf_indicator_study_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_trading_protobuf_indicator_study_proto_goTypes = []interface{}{
	(*IndicatorStudyRequest)(nil),        // 0: mbg.trading.protobuf.IndicatorStudyRequest
	(*IndicatorStudyReply)(nil),          // 1: mbg.trading.protobuf.IndicatorStudyReply
	(*indicators.IndicatorParams)(nil),   // 2: mbg.trading.protobuf.indicators.IndicatorParams
	(*entities.TemporalEntity)(nil),      // 3: mbg.trading.protobuf.data.entities.TemporalEntity
	(*indicators.IndicatorMetadata)(nil), // 4: mbg.trading.protobuf.indicators.IndicatorMetadata
}
var file_trading_protobuf_indicator_study_proto_depIdxs = []int32{
	2, // 0: mbg.trading.protobuf.IndicatorStudyRequest.params:type_name -> mbg.trading.protobuf.indicators.IndicatorParams
	3, // 1: mbg.trading.protobuf.IndicatorStudyRequest.data:type_name -> mbg.trading.protobuf.data.entities.TemporalEntity
	4, // 2: mbg.trading.protobuf.IndicatorStudyReply.metadata:type_name -> mbg.trading.protobuf.indicators.IndicatorMetadata
	0, // 3: mbg.trading.protobuf.IndicatorStudyService.Metadata:input_type -> mbg.trading.protobuf.IndicatorStudyRequest
	0, // 4: mbg.trading.protobuf.IndicatorStudyService.Data:input_type -> mbg.trading.protobuf.IndicatorStudyRequest
	1, // 5: mbg.trading.protobuf.IndicatorStudyService.Metadata:output_type -> mbg.trading.protobuf.IndicatorStudyReply
	1, // 6: mbg.trading.protobuf.IndicatorStudyService.Data:output_type -> mbg.trading.protobuf.IndicatorStudyReply
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_trading_protobuf_indicator_study_proto_init() }
func file_trading_protobuf_indicator_study_proto_init() {
	if File_trading_protobuf_indicator_study_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trading_protobuf_indicator_study_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicatorStudyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trading_protobuf_indicator_study_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicatorStudyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trading_protobuf_indicator_study_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trading_protobuf_indicator_study_proto_goTypes,
		DependencyIndexes: file_trading_protobuf_indicator_study_proto_depIdxs,
		MessageInfos:      file_trading_protobuf_indicator_study_proto_msgTypes,
	}.Build()
	File_trading_protobuf_indicator_study_proto = out.File
	file_trading_protobuf_indicator_study_proto_rawDesc = nil
	file_trading_protobuf_indicator_study_proto_goTypes = nil
	file_trading_protobuf_indicator_study_proto_depIdxs = nil
}
