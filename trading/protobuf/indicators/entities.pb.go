// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: trading/protobuf/indicators/entities.proto

package indicators

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Holds a time stamp and two band values.
type Band struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date and time stamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// The first value.
	FirstValue float64 `protobuf:"fixed64,2,opt,name=first_value,json=firstValue,proto3" json:"first_value,omitempty"`
	// The second value.
	SecondValue float64 `protobuf:"fixed64,3,opt,name=second_value,json=secondValue,proto3" json:"second_value,omitempty"`
}

func (x *Band) Reset() {
	*x = Band{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_indicators_entities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Band) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Band) ProtoMessage() {}

func (x *Band) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_indicators_entities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Band.ProtoReflect.Descriptor instead.
func (*Band) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_indicators_entities_proto_rawDescGZIP(), []int{0}
}

func (x *Band) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Band) GetFirstValue() float64 {
	if x != nil {
		return x.FirstValue
	}
	return 0
}

func (x *Band) GetSecondValue() float64 {
	if x != nil {
		return x.SecondValue
	}
	return 0
}

// Holds a time stamp (x) and an array of values (z) corresponding to parameter (y) range to paint a HeatMap column.
type HeatMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The date and time stamp.
	Time *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// The first parameter (y) value of the HeatMap. This value is the same for all columns.
	// A parameter corresponding to the i-th value can be calculated as
	// min(ParameterFirst,ParameterLast) + i / ParameterResolution.
	ParameterFirst float64 `protobuf:"fixed64,2,opt,name=parameter_first,json=parameterFirst,proto3" json:"parameter_first,omitempty"`
	// The last parameter (y) of the HeatMap. This value is the same for all columns.
	// A parameter corresponding to the i-th value can be calculated as
	// min(ParameterFirst,ParameterLast) + i / ParameterResolution.
	ParameterLast float64 `protobuf:"fixed64,3,opt,name=parameter_last,json=parameterLast,proto3" json:"parameter_last,omitempty"`
	// A parameter resolution value (positive number). A value of 10 means that HeatMap values are evaluated at every 0.1 of parameter range.
	// A parameter corresponding to the i-th value can be calculated as
	// min(ParameterFirst,ParameterLast) + i / ParameterResolution.
	ParameterResolution float64 `protobuf:"fixed64,4,opt,name=parameter_resolution,json=parameterResolution,proto3" json:"parameter_resolution,omitempty"`
	// A minimal value (z) of the HeatMap column.
	ValueMin float64 `protobuf:"fixed64,5,opt,name=value_min,json=valueMin,proto3" json:"value_min,omitempty"`
	// A maximal value (z) of the HeatMap column.
	ValueMax float64 `protobuf:"fixed64,6,opt,name=value_max,json=valueMax,proto3" json:"value_max,omitempty"`
	// The values (z) of the HeatMap column.
	Values []float64 `protobuf:"fixed64,7,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *HeatMap) Reset() {
	*x = HeatMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trading_protobuf_indicators_entities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeatMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeatMap) ProtoMessage() {}

func (x *HeatMap) ProtoReflect() protoreflect.Message {
	mi := &file_trading_protobuf_indicators_entities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeatMap.ProtoReflect.Descriptor instead.
func (*HeatMap) Descriptor() ([]byte, []int) {
	return file_trading_protobuf_indicators_entities_proto_rawDescGZIP(), []int{1}
}

func (x *HeatMap) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *HeatMap) GetParameterFirst() float64 {
	if x != nil {
		return x.ParameterFirst
	}
	return 0
}

func (x *HeatMap) GetParameterLast() float64 {
	if x != nil {
		return x.ParameterLast
	}
	return 0
}

func (x *HeatMap) GetParameterResolution() float64 {
	if x != nil {
		return x.ParameterResolution
	}
	return 0
}

func (x *HeatMap) GetValueMin() float64 {
	if x != nil {
		return x.ValueMin
	}
	return 0
}

func (x *HeatMap) GetValueMax() float64 {
	if x != nil {
		return x.ValueMax
	}
	return 0
}

func (x *HeatMap) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_trading_protobuf_indicators_entities_proto protoreflect.FileDescriptor

var file_trading_protobuf_indicators_entities_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x6d, 0x62,
	0x67, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a,
	0x0a, 0x04, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x92, 0x02, 0x0a, 0x07, 0x48,
	0x65, 0x61, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x4d, 0x61, 0x78, 0x12, 0x1a, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x01, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42,
	0x21, 0x5a, 0x1f, 0x6d, 0x62, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trading_protobuf_indicators_entities_proto_rawDescOnce sync.Once
	file_trading_protobuf_indicators_entities_proto_rawDescData = file_trading_protobuf_indicators_entities_proto_rawDesc
)

func file_trading_protobuf_indicators_entities_proto_rawDescGZIP() []byte {
	file_trading_protobuf_indicators_entities_proto_rawDescOnce.Do(func() {
		file_trading_protobuf_indicators_entities_proto_rawDescData = protoimpl.X.CompressGZIP(file_trading_protobuf_indicators_entities_proto_rawDescData)
	})
	return file_trading_protobuf_indicators_entities_proto_rawDescData
}

var file_trading_protobuf_indicators_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_trading_protobuf_indicators_entities_proto_goTypes = []interface{}{
	(*Band)(nil),                  // 0: mbg.trading.protobuf.indicators.Band
	(*HeatMap)(nil),               // 1: mbg.trading.protobuf.indicators.HeatMap
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_trading_protobuf_indicators_entities_proto_depIdxs = []int32{
	2, // 0: mbg.trading.protobuf.indicators.Band.time:type_name -> google.protobuf.Timestamp
	2, // 1: mbg.trading.protobuf.indicators.HeatMap.time:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_trading_protobuf_indicators_entities_proto_init() }
func file_trading_protobuf_indicators_entities_proto_init() {
	if File_trading_protobuf_indicators_entities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trading_protobuf_indicators_entities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Band); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trading_protobuf_indicators_entities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeatMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trading_protobuf_indicators_entities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trading_protobuf_indicators_entities_proto_goTypes,
		DependencyIndexes: file_trading_protobuf_indicators_entities_proto_depIdxs,
		MessageInfos:      file_trading_protobuf_indicators_entities_proto_msgTypes,
	}.Build()
	File_trading_protobuf_indicators_entities_proto = out.File
	file_trading_protobuf_indicators_entities_proto_rawDesc = nil
	file_trading_protobuf_indicators_entities_proto_goTypes = nil
	file_trading_protobuf_indicators_entities_proto_depIdxs = nil
}
